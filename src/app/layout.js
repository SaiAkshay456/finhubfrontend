
import { Geist, Geist_Mono } from "next/font/google";
// import Sidebar from "../components/Sidebar";
import { Hero } from "../components/Hero";
import ClientLayoutWrapper from "../components/ClientLayoutWrapper";
// import ClientLastVisitWrapper from "../components/ClientLastVisitWrapper";
import "./globals.css";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
// 
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

import { cookies } from "next/headers";
import { AuthProvider } from "../providers/AuthProvider";
// import axios from "axios";
import { redirect } from "next/navigation";
// import LoginForm from "../features/auth/LoginForm";

export default async function RootLayout({ children }) {
  const cookieStore = await cookies();
  const token = cookieStore.get("token")?.value;
  // const router = useRouter();
  console.log(token);
  let user = null;
  let isAuthorized = false;
  // if (!token) {
  //   redirect('/login');
  // }


  if (token) {
    try {
      const res = await fetch("http://localhost:3030/api/v1/auth/user/me", {
        method: "GET",
        headers: {
          Authorization: `Bearer ${token}`,
        },
        credentials: "include",
        // cache: "no-store",
      });
      if (res.ok) {
        const data = await res.json();
        user = data.user;
        isAuthorized = true;
        // redirect("/")
      }
    } catch (e) {
      console.log(e);
    }
  }
  console.log("hiiiiiii")



  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >


        <AuthProvider initialUser={user} initialAuth={isAuthorized}>
          <ClientLayoutWrapper>
            <Hero />
            {children}
          </ClientLayoutWrapper>
        </AuthProvider>
      </body>
    </html>
  );
}

